// For format details, see https://aka.ms/devcontainer.json. For config options, see the README at:
// https://github.com/microsoft/vscode-dev-containers/tree/v0.238.1/containers/python-3-postgres
// Update the VARIANT arg in docker-compose.yml to pick a Python version
// For format details, see https://aka.ms/devcontainer.json. For config options, see the README at:
// https://github.com/microsoft/vscode-dev-containers/tree/v0.241.1/containers/python-3
{
	"name": "codyspace",
	"build": {
		"dockerfile": "Dockerfile",
		"context": "..",
		"args": { 
			// Update 'VARIANT' to pick a Python version: 3, 3.10, 3.9, 3.8, 3.7, 3.6
			// Append -bullseye or -buster to pin to an OS version.
			// Use -bullseye variants on local on arm64/Apple Silicon.
			"VARIANT": "3.8",
			// Options
			"NODE_VERSION": "lts/*"
		}
	},
	
	// stealing from https://github.com/dbt-labs/jaffle_shop_duckdb/pull/28/files
	"settings": {
        "terminal.integrated.defaultProfile.linux#": "/bin/sh",
        "files.associations": {
            "*.sql": "jinja-sql",
            "*.sqlfluff": "ini",
            "*.yml": "yaml",
            "**/target/**": ""
        },
        "sql.linter.executablePath": "/usr/local/bin/sqlfluff",
        "sql.format.enable": true,
        "sql.linter.run": "onType",
		// I have most of these in .gitignore dotfiles...but no harm?
        "files.exclude": {
            "**/.git": true,
            "**/.svn": true,
            "**/.hg": true,
            "**/CVS": true,
            "**/.DS_Store": true,
            "**/__pycache__": true
          },
		  // no clue what this does
          "findrelated.workspaceRulesets": [
            {
              "name": "sql",
              "rules": [
                {
                  "pattern": "^(.*/)?models/(.*/)?(.+\\.sql)$",
                  "locators": [
                    "**/compiled/**/$3"
                  ]
                },
                {
                  "pattern": "^(.*/)?compiled/(.*/)?(.+\\.sql)$",
                  "locators": [
                    "**/run/**/$3"
                  ]
                },
                {
                  "pattern": "^(.*/)?run/(.*/)?(.+\\.sql)$",
                  "locators": [
                    "**/models/**/$3"
                  ]
                }
              ]
            }
          ],
          "findrelated.applyRulesets": [
            "sql"
          ],
          "findrelated.applyWorkspaceRulesets": [
            "sql"
          ],
          "workbench.editor.highlightModifiedTabs": true,
          "workbench.editor.labelFormat": "medium",
          "workbench.editor.revealIfOpen": true,
          "editor.rulers": [
            99
          ]
    },
	// Configure tool-specific properties.
	"customizations": {
		// Configure properties specific to VS Code.
		"vscode": {
			// Set *default* container specific settings.json values on container create.
			"settings": { 
				"python.defaultInterpreterPath": "/usr/local/bin/python",
				"python.linting.enabled": true,
				"python.linting.pylintEnabled": true,
				"python.formatting.autopep8Path": "/usr/local/py-utils/bin/autopep8",
				"python.formatting.blackPath": "/usr/local/py-utils/bin/black",
				"python.formatting.yapfPath": "/usr/local/py-utils/bin/yapf",
				"python.linting.banditPath": "/usr/local/py-utils/bin/bandit",
				"python.linting.flake8Path": "/usr/local/py-utils/bin/flake8",
				"python.linting.mypyPath": "/usr/local/py-utils/bin/mypy",
				"python.linting.pycodestylePath": "/usr/local/py-utils/bin/pycodestyle",
				"python.linting.pydocstylePath": "/usr/local/py-utils/bin/pydocstyle",
				"python.linting.pylintPath": "/usr/local/py-utils/bin/pylint",
				"python.testing.pytestPath": "/usr/local/py-utils/bin/pytest"
			},
			
			// Add the IDs of extensions you want installed when the container is created.
			// stealing again from PR linked above, adding some of my own
			"extensions": [
				"vscodevim.vim",
				"ms-python.python",
				"ckolkman.vscode-postgres",
				"cschlosser.doxdocgen",
				"eamodio.gitlens",
				"github.codespaces",
				"github.copilot",
				"github.remotehub",
				"github.vscode-pull-request-github",
				"mechatroner.rainbow-csv",
				"ms-toolsai.jupyter",
				"ms-toolsai.jupyter-keymap",
				"ms-toolsai.jupyter-renderers",
				"ms-vscode-remote.remote-containers",
				"ms-vscode.cmake-tools",
				"twxs.cmake",
				"waderyan.gitblame",
				"bastienboutonnet.vscode-dbt",
				"dorzey.vscode-sqlfluff",
				"editorconfig.editorconfig",
				"amodio.find-related",
				"samuelcolvin.jinjahtml"
			]
		}
	},

	// Use 'forwardPorts' to make a list of ports inside the container available locally.
	// This can be used to network with other containers or the host.
	// "forwardPorts": [5000, 5432],

	// Use 'postCreateCommand' to run commands after the container is created.
	//"postCreateCommand": "pip install --user -r requirements.txt && /bin/bash +x setup.sh",

	// Comment out to connect as root instead. More info: https://aka.ms/vscode-remote/containers/non-root.
	"remoteUser": "vscode",
	"features": {
		"git": "latest",
		"git-lfs": "latest",
		"github-cli": "latest",
		//"aws-cli": "latest",
		"homebrew": "latest",
		"rust": "latest"
	}
}
